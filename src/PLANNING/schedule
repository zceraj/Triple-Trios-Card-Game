    KEY
O - not complete
X - completed
* - in progress if needed

Day 1 - Preparation & Initial Design:
X 1. Review design feedback and incorporate necessary changes from previous assignments.
X 2. Clean up prior code from previous assignments, ensuring no leftover issues.
X 3. Design player-action and model-status interfaces.
X 4. Implement view with the ability to add player-action listeners.
X 5. Design the player and model event systems.

Day 2 - Controller Design and View Implementation:
X 1. Design the controller, incorporating both human and machine player handling.
X 2. Design controller to subscribe to both model and view events.
x 3. Implement controller to ensure player turn-based action.
x 4. Ensure that the view updates based on machine player actions.
x 5. Handle exceptions and errors in the controller for invalid moves.

Day 3 - Implementing Game Logic & Game Execution:
1. Implement game start mechanism with `startGame` method.
2. Implement two views for two players.
3. Configure the game for multiple player setups (human vs machine).
4. Test turn-based synchronization between players.

Day 4 - Testing & Debugging:
1. Run game with two views and check interaction between players.
2. Test the controller to ensure correct player actions.
3. Debug any issues that arise during gameplay (e.g., invalid moves, synchronization issues).
4. Ensure the game ends properly, displaying winner and score.
5. Test different combinations of human and machine players.

Day 5 - Finalizing and Submitting:
1. Update README file with new classes and explanations. -(M- added changes i made)
2. Take four screenshots showing game view in action.
3. Prepare strategy transcript from the mocked model. - done(M)
4. Create a JAR file that can run the program.
5. Submit all source files, test files, README, screenshots, strategy transcript, and JAR file.